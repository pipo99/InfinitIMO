{
    "openapi": "3.0.1",
    "info": {
        "title": "GOTOMARKET CONNECT",
        "description": "API GOTOMARKET CONNECT",
        "version": "v1"
    },
    "paths": {
        "/api/Authenticate": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate",
                "description": "Authenticates a user by validating their credentials against the authentication service.\r\nIf the provided credentials are valid, the API returns an access token that can be used for authentication purposes.\r\nThe access token is valid for 1 hour and should be included in subsequent API requests as a bearer token in the authorization header.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Customers/BulkUpload": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Bulk Upload",
                "description": "This API endpoint allows you to send a batch of customer data to Gotomarket for processing. \r\nThe customer data represents information about new or updated customers that need to be synchronized with Gotomarket's database. \r\nBy sending this customer data to Gotomarket, you ensure that the latest customer information is available for various business processes.\r\n            \r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_CUSTOMERS"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_CUSTOMERS"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_CUSTOMERS"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/INTEGRATIONCUSTOMERSUMMARY"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Log/Create": {
            "post": {
                "tags": [
                    "Log"
                ],
                "summary": "Create",
                "description": "This method is used to create a log entry for a specific activity performed by a user.\r\nIt requires the provided log data to have non-empty values for the entity, inout, and typedescription fields.\r\n\r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogEntry"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogEntry"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Log/CreateDetail": {
            "post": {
                "tags": [
                    "Log"
                ],
                "summary": "CreateDetail",
                "description": "This method is used to create a detailed log entry for a specific activity performed by a user.\r\nThe method expects a valid LogEntryDetail object containing the necessary information such as IdLog,\r\nIdOrigem, Json, Endpoint, FullEndpoint, and ErrorMessage.\r\nThe method requires the provided IdLog field to be non-null and non-empty.\r\nBefore creating the log entry, the user's license is retrieved from the JWT token, and the connection\r\nstring for the staging environment is set accordingly.\r\nIf the required data is missing or invalid, the method returns a Bad Request response with an appropriate error message.\r\nIf the log entry is successfully created, it returns a unique identifier for the new detailed log entry.\r\n\r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogEntryDetail"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogEntryDetail"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogEntryDetail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Log/Close": {
            "post": {
                "tags": [
                    "Log"
                ],
                "summary": "Close",
                "description": "This method is used to close a log entry based on the provided details and final result.\r\nThe method expects a valid log object containing the necessary information such as IDLOG, Ok, and Error.\r\nThe log object should have Ok set to 1 if the log operation was successful without any errors, otherwise set to 0.\r\nIf Ok is set to 0, the Error property should contain the appropriate error code associated with the log operation.\r\nThe method will update the log entry identified by the specified IDLOG with the provided final result and error details (if applicable).\r\nIf the provided IDLOG is not found or if the log entry is already closed, the method will not perform any action, and the response will indicate success.\r\nNote: It is assumed that IDLOG uniquely identifies an open log entry that needs to be closed.\r\n\r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "description": "The log entry details to be closed.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogClose"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogClose"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogClose"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/GetOrders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get Orders",
                "description": "This API method allows you to retrieve orders placed in Gotomarket within a specified timeframe. \r\nThe retrieved orders represent the purchase orders submitted by customers through Gotomarket's platform. \r\nBy fetching these orders, you can integrate them into your system for order processing and fulfillment.\r\n            \r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "The start date. Example: 01-01-2023",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "The end date. Example: 31-01-2023",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OUT_DOCUMENTS"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Orders/LinkExternalOrder": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Link External Order",
                "description": "This API method allows you to link external orders (Created on ERP)  to Gotomarket Order. \r\nThe linked orders will be processed and fulfilled through Gotomarket's platform. \r\nBy linking external orders, you can manage and track them using Gotomarket's order management system.\r\n            \r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LINKEXTERNALORDER"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LINKEXTERNALORDER"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LINKEXTERNALORDER"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Products/BulkUpload": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Bulk Upload",
                "description": "This API endpoint allows you to send a batch of product data to Gotomarket for processing.\r\nThe product data represents information about new or updated products that need to be synchronized with Gotomarket's database. \r\nBy sending this product data to Gotomarket, you ensure that the latest product information is available for various business processes.\r\n            \r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_PRODUCTS"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_PRODUCTS"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_PRODUCTS"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/INTEGRATIONPRODUCTSUMMARY"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Receipts/GetReceipts": {
            "get": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Get Receipts",
                "description": "This API method allows you to retrieve receipts made between two specified dates from Gotomarket. \r\nThe retrieved receipts represent the financial transactions and payment records processed by Gotomarket. \r\nBy fetching these receipts, you can integrate them into the client's ERP system for further analysis and financial reconciliation.\r\n            \r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "The start date. Example: 2023-01-01",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "The end date. Example: 2023-01-31",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OUT_RECEIPTS"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Receipts/LinkExternalReceipt": {
            "post": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Link External Order",
                "description": "This API method allows you to link external receipts (Created on ERP)  to Gotomarket Receipt. \r\nThe linked receipts will be processed and fulfilled through Gotomarket's platform. \r\nBy linking external orders, you can manage and track them using Gotomarket's receipts management system.\r\n            \r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "description": "The data of the external receipt to be linked.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LINKEXTERNALRECEIPT"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LINKEXTERNALRECEIPT"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LINKEXTERNALRECEIPT"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/SellOut/BulkUpload": {
            "post": {
                "tags": [
                    "SellOut"
                ],
                "summary": "Bulk Upload",
                "description": "This API endpoint allows you to send a batch of sellout data to Gotomarket for processing. \r\nThe sellout data represents information about the sales transactions and product performance captured at the point of sale. \r\nBy sending this sellout data to Gotomarket, you enable the analysis of sales trends, product performance, and other valuable insights.\r\n            \r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_SELLOUT"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_SELLOUT"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_SELLOUT"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/INTEGRATIONSELLOUTSUMMARY"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/UnpaidDocuments/BulkUpload": {
            "post": {
                "tags": [
                    "UnpaidDocuments"
                ],
                "summary": "Bulk Upload",
                "description": "This API endpoint allows you to send a batch of unpaid documents to Gotomarket for processing. \r\nThe unpaid documents represent unpaid invoices from customers. \r\nBy sending these invoices to Gotomarket, you initiate the payment collection process and track the status of each invoice.\r\n            \r\n<strong>Authentication:</strong>\r\nThis endpoint requires a valid Bearer token to be included in the Authorization header of the request.\r\nMake sure to obtain a valid token before making requests to this endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_UNPAIDDOCUMENTS"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_UNPAIDDOCUMENTS"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IN_UNPAIDDOCUMENTS"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/INTEGRATIONUNPAIDDOCUMENTSSUMMARY"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "INTEGRATIONCUSTOMERSUMMARY": {
                "type": "object",
                "properties": {
                    "customerCode": {
                        "type": "string",
                        "description": "The code of the customer.",
                        "nullable": true,
                        "example": "C0000001"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "The name of the customer.",
                        "nullable": true,
                        "example": "John Smith"
                    },
                    "integrated": {
                        "type": "string",
                        "description": "Indicates if the customer data has been integrated.",
                        "nullable": true,
                        "example": "Yes"
                    },
                    "integrationMessage": {
                        "type": "string",
                        "description": "The integration message related to the customer data.",
                        "nullable": true,
                        "example": "Data integrated successfully"
                    }
                },
                "additionalProperties": false
            },
            "INTEGRATIONPRODUCTSUMMARY": {
                "type": "object",
                "properties": {
                    "skuCode": {
                        "type": "string",
                        "description": "The code of the SKU (Stock Keeping Unit).",
                        "nullable": true,
                        "example": "SKU001"
                    },
                    "skuName": {
                        "type": "string",
                        "description": "The name of the SKU.",
                        "nullable": true,
                        "example": "Sample Product"
                    },
                    "integrated": {
                        "type": "string",
                        "description": "Indicates if the SKU data has been integrated.",
                        "nullable": true,
                        "example": "Yes"
                    },
                    "integrationMessage": {
                        "type": "string",
                        "description": "The integration message related to the SKU data.",
                        "nullable": true,
                        "example": "Data integrated successfully"
                    }
                },
                "additionalProperties": false
            },
            "INTEGRATIONSELLOUTSUMMARY": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "string",
                        "description": "The year of the data.",
                        "nullable": true,
                        "example": "2023"
                    },
                    "month": {
                        "type": "string",
                        "description": "The month of the data.",
                        "nullable": true,
                        "example": "01"
                    },
                    "customerCode": {
                        "type": "string",
                        "description": "The code of the customer.",
                        "nullable": true,
                        "example": "CUST001"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "The name of the customer.",
                        "nullable": true,
                        "example": "John Smith"
                    },
                    "skuCode": {
                        "type": "string",
                        "description": "The code of the SKU (Stock Keeping Unit).",
                        "nullable": true,
                        "example": "SKU001"
                    },
                    "skuName": {
                        "type": "string",
                        "description": "The name of the SKU.",
                        "nullable": true,
                        "example": "Sample Product"
                    },
                    "integrated": {
                        "type": "string",
                        "description": "Indicates if the data has been integrated.",
                        "nullable": true,
                        "example": "Yes"
                    },
                    "integrationMessage": {
                        "type": "string",
                        "description": "The integration message related to the data.",
                        "nullable": true,
                        "example": "Data integrated successfully"
                    }
                },
                "additionalProperties": false
            },
            "INTEGRATIONUNPAIDDOCUMENTSSUMMARY": {
                "required": [
                    "documentserial"
                ],
                "type": "object",
                "properties": {
                    "customercode": {
                        "type": "string",
                        "description": "The code of the customer.",
                        "nullable": true,
                        "example": "CUST001"
                    },
                    "customername": {
                        "type": "string",
                        "description": "The name of the customer.",
                        "nullable": true,
                        "example": "John Smith"
                    },
                    "documenttypecode": {
                        "type": "string",
                        "description": "The code of the document type.",
                        "nullable": true,
                        "example": "DOC001"
                    },
                    "documentserial": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Document serial",
                        "example": "Invoice"
                    },
                    "documenttype": {
                        "type": "string",
                        "description": "The name of the document type.",
                        "nullable": true,
                        "example": "Invoice"
                    },
                    "documentNumber": {
                        "type": "string",
                        "description": "The document number.",
                        "nullable": true,
                        "example": "INV001"
                    },
                    "integrated": {
                        "type": "string",
                        "description": "Indicates if the data has been integrated.",
                        "nullable": true,
                        "example": "Yes"
                    },
                    "integrationMessage": {
                        "type": "string",
                        "description": "The integration message related to the data.",
                        "nullable": true,
                        "example": "Data integrated successfully"
                    }
                },
                "additionalProperties": false
            },
            "IN_CUSTOMERS": {
                "required": [
                    "customercode",
                    "customername",
                    "fiscalname",
                    "fiscalnumber"
                ],
                "type": "object",
                "properties": {
                    "customercode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer internal code",
                        "example": "C0000001"
                    },
                    "fiscalnumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer vatnumber code",
                        "example": "VAT00001"
                    },
                    "fiscalname": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer fiscal name",
                        "example": "John Smith, Solutions Inc. "
                    },
                    "customername": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer name",
                        "example": "John Smith"
                    },
                    "segment1code": {
                        "type": "string",
                        "description": "Segment1 code",
                        "nullable": true,
                        "example": "01"
                    },
                    "segment1name": {
                        "type": "string",
                        "description": "Segment1 name",
                        "nullable": true,
                        "example": "Corporate Client"
                    },
                    "segment2code": {
                        "type": "string",
                        "description": "Segment2 code",
                        "nullable": true,
                        "example": "02"
                    },
                    "segment2name": {
                        "type": "string",
                        "description": "Segment2 name",
                        "nullable": true,
                        "example": "Northwest Region"
                    },
                    "segment3code": {
                        "type": "string",
                        "description": "Segment3 code",
                        "nullable": true,
                        "example": "03"
                    },
                    "segment3name": {
                        "type": "string",
                        "description": "Segment2 name",
                        "nullable": true,
                        "example": "Premium"
                    },
                    "segment4code": {
                        "type": "string",
                        "description": "Segment4 code",
                        "nullable": true,
                        "example": "04"
                    },
                    "segment4name": {
                        "type": "string",
                        "description": "Segment4 name",
                        "nullable": true,
                        "example": "Preferred Customer"
                    },
                    "segment5code": {
                        "type": "string",
                        "description": "Segment5 code",
                        "nullable": true,
                        "example": "05"
                    },
                    "segment5name": {
                        "type": "string",
                        "description": "Segment5 name",
                        "nullable": true,
                        "example": "Small Business"
                    },
                    "segment6code": {
                        "type": "string",
                        "description": "Segment6 code",
                        "nullable": true,
                        "example": "06"
                    },
                    "segment6name": {
                        "type": "string",
                        "description": "Segment6 name",
                        "nullable": true,
                        "example": "Coffee Shop"
                    },
                    "address1": {
                        "type": "string",
                        "description": "Address 1",
                        "nullable": true,
                        "example": "Edifício Bettertech"
                    },
                    "address2": {
                        "type": "string",
                        "description": "Address 2",
                        "nullable": true,
                        "example": "Praça do Comércio 14"
                    },
                    "zipcode": {
                        "type": "string",
                        "description": "Zip Code",
                        "nullable": true,
                        "example": "3000-116"
                    },
                    "city": {
                        "type": "string",
                        "description": "City",
                        "nullable": true,
                        "example": "Coimbra"
                    },
                    "phone1": {
                        "type": "string",
                        "description": "Phone 1",
                        "nullable": true,
                        "example": "239 244 512"
                    },
                    "phone2": {
                        "type": "string",
                        "description": "Phone 2",
                        "nullable": true,
                        "example": "239 244 513"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email",
                        "nullable": true,
                        "example": "geral@bettertechsoftware.com"
                    },
                    "contactperson": {
                        "type": "string",
                        "description": "Contact Person",
                        "nullable": true,
                        "example": "Mr. John Doe"
                    },
                    "contactfunction": {
                        "type": "string",
                        "description": "Contact Function",
                        "nullable": true,
                        "example": "Sales Manager"
                    },
                    "contactphone": {
                        "type": "string",
                        "description": "Contact Phone",
                        "nullable": true,
                        "example": "555-555-5555"
                    },
                    "contactemail": {
                        "type": "string",
                        "description": "Contact Email",
                        "nullable": true,
                        "example": "johndoe@example.com"
                    },
                    "statecode": {
                        "type": "string",
                        "description": "State Code",
                        "nullable": true,
                        "example": "01"
                    },
                    "statename": {
                        "type": "string",
                        "description": "State Name",
                        "nullable": true,
                        "example": "Central Portugal"
                    },
                    "regioncode": {
                        "type": "string",
                        "description": "Region Code",
                        "nullable": true,
                        "example": "CBR"
                    },
                    "regionname": {
                        "type": "string",
                        "description": "Region Name",
                        "nullable": true,
                        "example": "Coimbra"
                    },
                    "countrycode": {
                        "type": "string",
                        "description": "Country Code",
                        "nullable": true,
                        "example": "PT"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country",
                        "nullable": true,
                        "example": "40.7128"
                    },
                    "gps_lat": {
                        "type": "string",
                        "description": "GPS LAT",
                        "nullable": true,
                        "example": "PORTUGAL"
                    },
                    "gps_log": {
                        "type": "string",
                        "description": "GPS LOG",
                        "nullable": true,
                        "example": "-74.0060"
                    },
                    "salesrepcode": {
                        "type": "string",
                        "description": "Salesrep Code",
                        "nullable": true,
                        "example": "SR001"
                    },
                    "salesrepname": {
                        "type": "string",
                        "description": "Salesrep Name",
                        "nullable": true,
                        "example": "John Smith"
                    },
                    "teamleadercode": {
                        "type": "string",
                        "description": "Teamleader Code",
                        "nullable": true,
                        "example": "TL001"
                    },
                    "temleadername": {
                        "type": "string",
                        "description": "Teamleader name",
                        "nullable": true,
                        "example": "Jane Doe"
                    },
                    "paymentconditioncode": {
                        "type": "string",
                        "description": "Payment Condition Code",
                        "nullable": true,
                        "example": "30"
                    },
                    "paymentcondition": {
                        "type": "string",
                        "description": "Payment Condition Name",
                        "nullable": true,
                        "example": "Payment within 30 days"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Active",
                        "example": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Notes",
                        "nullable": true,
                        "example": "Sample note about customer"
                    }
                },
                "additionalProperties": false
            },
            "IN_PRODUCTS": {
                "required": [
                    "priceref1",
                    "skucode",
                    "skuname"
                ],
                "type": "object",
                "properties": {
                    "skucode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Product SKU code",
                        "example": "SKU001"
                    },
                    "barcode": {
                        "type": "string",
                        "description": "Product barcode",
                        "nullable": true,
                        "example": "123456789"
                    },
                    "skuname": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Product name",
                        "example": "Sample Product"
                    },
                    "priceref1": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Price reference 1",
                        "example": "10.99"
                    },
                    "priceref2": {
                        "type": "string",
                        "description": "Price reference 2",
                        "nullable": true,
                        "example": "15.99"
                    },
                    "priceref3": {
                        "type": "string",
                        "description": "Price reference 3",
                        "nullable": true,
                        "example": "20.99"
                    },
                    "priceref4": {
                        "type": "string",
                        "description": "Price reference 4",
                        "nullable": true,
                        "example": "25.99"
                    },
                    "taxrate": {
                        "type": "string",
                        "description": "Tax Rate (VAT)",
                        "nullable": true,
                        "example": "23"
                    },
                    "seg1code": {
                        "type": "string",
                        "description": "Segment 1 code",
                        "nullable": true,
                        "example": "SEG001"
                    },
                    "seg1name": {
                        "type": "string",
                        "description": "Segment 1 name",
                        "nullable": true,
                        "example": "Electronics"
                    },
                    "seg2code": {
                        "type": "string",
                        "description": "Segment 2 code",
                        "nullable": true,
                        "example": "SEG002"
                    },
                    "seg2name": {
                        "type": "string",
                        "description": "Segment 2 name",
                        "nullable": true,
                        "example": "Clothing"
                    },
                    "seg3code": {
                        "type": "string",
                        "description": "Segment 3 code",
                        "nullable": true,
                        "example": "SEG003"
                    },
                    "seg3name": {
                        "type": "string",
                        "description": "Segment 3 name",
                        "nullable": true,
                        "example": "Health and Beauty"
                    },
                    "seg4code": {
                        "type": "string",
                        "description": "Segment 4 code",
                        "nullable": true,
                        "example": "SEG004"
                    },
                    "seg4name": {
                        "type": "string",
                        "description": "Segment 4 name",
                        "nullable": true,
                        "example": "Furniture"
                    },
                    "seg5code": {
                        "type": "string",
                        "description": "Segment 5 code",
                        "nullable": true,
                        "example": "SEG005"
                    },
                    "seg5name": {
                        "type": "string",
                        "description": "Segment 5 name",
                        "nullable": true,
                        "example": "Food and Beverages"
                    },
                    "seg6code": {
                        "type": "string",
                        "description": "Segment 6 code",
                        "nullable": true,
                        "example": "SEG006"
                    },
                    "seg6name": {
                        "type": "string",
                        "description": "Segment 6 name",
                        "nullable": true,
                        "example": "Sports and Fitness"
                    },
                    "bought": {
                        "type": "boolean",
                        "description": "Bought field",
                        "example": true
                    },
                    "produced": {
                        "type": "boolean",
                        "description": "Produced field",
                        "example": true
                    },
                    "rawmaterial": {
                        "type": "boolean",
                        "description": "Raw material field",
                        "example": true
                    },
                    "package": {
                        "type": "boolean",
                        "description": "Package field",
                        "example": true
                    },
                    "skuunit": {
                        "type": "string",
                        "description": "SKU unit",
                        "nullable": true,
                        "example": "BOX"
                    },
                    "unitsperpackage": {
                        "type": "string",
                        "description": "Units per package",
                        "nullable": true,
                        "example": "1"
                    },
                    "grossweigh": {
                        "type": "string",
                        "description": "Gross weight",
                        "nullable": true,
                        "example": "1"
                    },
                    "netweight": {
                        "type": "string",
                        "nullable": true
                    },
                    "variableweight": {
                        "type": "boolean",
                        "description": "Variable weight field",
                        "example": true
                    },
                    "skupoints": {
                        "type": "string",
                        "description": "SKU points",
                        "nullable": true,
                        "example": "15"
                    },
                    "skunotes": {
                        "type": "string",
                        "description": "SKU notes",
                        "nullable": true,
                        "example": "Notes about product"
                    },
                    "skusalesunit": {
                        "type": "string",
                        "description": "SKU sales unit",
                        "nullable": true,
                        "example": "BOX"
                    },
                    "skucapacity": {
                        "type": "string",
                        "description": "SKU capacity",
                        "nullable": true,
                        "example": "1"
                    },
                    "orderpoint": {
                        "type": "string",
                        "description": "Order point",
                        "nullable": true,
                        "example": "1"
                    },
                    "replacementstockdays": {
                        "type": "string",
                        "description": "Replacement stock days",
                        "nullable": true,
                        "example": "10"
                    },
                    "buyable": {
                        "type": "boolean",
                        "description": "Buyable field",
                        "example": true
                    },
                    "isaggregator": {
                        "type": "boolean",
                        "description": "Is aggregator field",
                        "example": true
                    },
                    "aggregatorcode": {
                        "type": "string",
                        "description": "Aggregator code",
                        "nullable": true,
                        "example": "0001"
                    },
                    "aggregatorname": {
                        "type": "string",
                        "description": "Aggregator name",
                        "nullable": true,
                        "example": "Product Agregator Sample"
                    },
                    "onlywithorder": {
                        "type": "boolean",
                        "description": "Only with order field",
                        "example": false
                    },
                    "replacementstock": {
                        "type": "string",
                        "description": "Replacement stock",
                        "nullable": true,
                        "example": "5"
                    },
                    "stockforxdays": {
                        "type": "string",
                        "description": "Stock for x days",
                        "nullable": true,
                        "example": "30"
                    },
                    "stockrotationdays": {
                        "type": "string",
                        "description": "Stock rotation days",
                        "nullable": true,
                        "example": "20"
                    },
                    "stockrotationmonthref": {
                        "type": "string",
                        "description": "Stock rotation month reference",
                        "nullable": true,
                        "example": "Month"
                    }
                },
                "additionalProperties": false
            },
            "IN_SELLOUT": {
                "required": [
                    "customercode",
                    "customername",
                    "date",
                    "day",
                    "document",
                    "month",
                    "offersqty",
                    "returnsqty",
                    "returnsvalue",
                    "revenuevalue",
                    "salesqty",
                    "salesvalue",
                    "skucode",
                    "skuname",
                    "vendorcode",
                    "vendorname",
                    "year"
                ],
                "type": "object",
                "properties": {
                    "date": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Date",
                        "example": "01-01-2023"
                    },
                    "year": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Year",
                        "example": "2023"
                    },
                    "month": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Month",
                        "example": "10"
                    },
                    "day": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Day",
                        "example": "01"
                    },
                    "document": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Document",
                        "example": "FT 01/202321"
                    },
                    "customercode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer code",
                        "example": "CUST001"
                    },
                    "customername": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer name",
                        "example": "John Smith"
                    },
                    "skucode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "SKU code",
                        "example": "SKU001"
                    },
                    "skuname": {
                        "minLength": 1,
                        "type": "string",
                        "description": "SKU name",
                        "example": "Sample Product"
                    },
                    "revenuevalue": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Revenue value",
                        "example": "100.50"
                    },
                    "salesvalue": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales value",
                        "example": "80.00"
                    },
                    "returnsvalue": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Returns value",
                        "example": "10.50"
                    },
                    "salesqty": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales quantity",
                        "example": "50"
                    },
                    "offersqty": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Offers quantity",
                        "example": "10"
                    },
                    "returnsqty": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Returns quantity",
                        "example": "5"
                    },
                    "vendorcode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Vendor code",
                        "example": "VEND001"
                    },
                    "vendorname": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Vendor name",
                        "example": "Vendor Inc."
                    }
                },
                "additionalProperties": false
            },
            "IN_UNPAIDDOCUMENTS": {
                "required": [
                    "customercode",
                    "customername",
                    "date",
                    "debcred",
                    "documentnumber",
                    "documentserial",
                    "documenttypecode",
                    "documettype",
                    "duedate",
                    "invoicevalue",
                    "salesrepcode",
                    "salesrepname",
                    "unpaid"
                ],
                "type": "object",
                "properties": {
                    "customercode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer code",
                        "example": "CUST001"
                    },
                    "customername": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer name",
                        "example": "John Smith"
                    },
                    "salesrepcode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales representative code",
                        "example": "REP001"
                    },
                    "salesrepname": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales representative name",
                        "example": "John Doe"
                    },
                    "documenttypecode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Document type code",
                        "example": "DOC001"
                    },
                    "documettype": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Document type",
                        "example": "Invoice"
                    },
                    "documentserial": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Document serial",
                        "example": "Invoice"
                    },
                    "documentnumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Document number",
                        "example": "INV001"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date",
                        "format": "date-time",
                        "example": "2023-07-31"
                    },
                    "duedate": {
                        "type": "string",
                        "description": "Due date",
                        "format": "date-time",
                        "example": "2023-08-15"
                    },
                    "invoicevalue": {
                        "type": "number",
                        "description": "Invoice value",
                        "format": "double",
                        "example": 500
                    },
                    "unpaid": {
                        "type": "number",
                        "description": "Unpaid amount",
                        "format": "double",
                        "example": 250
                    },
                    "debcred": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Debit or Credit indicator",
                        "example": "Debit"
                    }
                },
                "additionalProperties": false
            },
            "LINKEXTERNALORDER": {
                "type": "object",
                "properties": {
                    "documentid": {
                        "type": "string",
                        "description": "GotoMarket Document Id",
                        "nullable": true,
                        "example": "10001"
                    },
                    "externalDocument": {
                        "type": "string",
                        "description": "External document integrated on ERP System",
                        "nullable": true,
                        "example": "NE 01/1234 "
                    }
                },
                "additionalProperties": false
            },
            "LINKEXTERNALRECEIPT": {
                "type": "object",
                "properties": {
                    "receiptid": {
                        "type": "string",
                        "description": "GotoMarket Receipt Id",
                        "nullable": true,
                        "example": "10001"
                    },
                    "externalReceipt": {
                        "type": "string",
                        "description": "External receipt integrated on ERP System",
                        "nullable": true,
                        "example": "RC 01/1234 "
                    }
                },
                "additionalProperties": false
            },
            "LogClose": {
                "required": [
                    "idlog"
                ],
                "type": "object",
                "properties": {
                    "idlog": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the unique identifier for the log entry.",
                        "example": "12345"
                    },
                    "ok": {
                        "type": "integer",
                        "description": "Gets or sets the result of the log operation.",
                        "format": "int32",
                        "example": 1
                    },
                    "error": {
                        "type": "integer",
                        "description": "Gets or sets the error code if the log operation encountered an error.",
                        "format": "int32",
                        "example": 1001
                    }
                },
                "additionalProperties": false
            },
            "LogEntry": {
                "required": [
                    "entity",
                    "inout",
                    "typedescription"
                ],
                "type": "object",
                "properties": {
                    "entity": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Entity",
                        "example": "GOTOMARKET CONNECT"
                    },
                    "typedescription": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Log description",
                        "example": "Create order on external erp"
                    },
                    "inout": {
                        "minLength": 1,
                        "type": "string",
                        "description": "In or Out Operation",
                        "example": "I"
                    }
                },
                "additionalProperties": false
            },
            "LogEntryDetail": {
                "required": [
                    "description",
                    "entity"
                ],
                "type": "object",
                "properties": {
                    "idLog": {
                        "type": "string",
                        "description": "The unique identifier for the log entry.",
                        "nullable": true,
                        "example": "105"
                    },
                    "entity": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Entity",
                        "example": "GOTOMARKET CONNECT"
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Log description",
                        "example": "Create order on external erp"
                    },
                    "idLogSource": {
                        "type": "string",
                        "description": "The identifier of the source of the log entry.",
                        "nullable": true,
                        "example": "105"
                    },
                    "json": {
                        "type": "string",
                        "description": "The JSON data related to the log entry.",
                        "nullable": true
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The endpoint used for the log entry.",
                        "nullable": true,
                        "example": "api/Log/CreateDetail"
                    },
                    "fullEndpoint": {
                        "type": "string",
                        "description": "The full endpoint used for the log entry.",
                        "nullable": true,
                        "example": "api/Log/CreateDetail"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "The error message associated with the log entry (if any).",
                        "nullable": true,
                        "example": "Error creating order N. 1234"
                    }
                },
                "additionalProperties": false
            },
            "LoginModel": {
                "required": [
                    "licence",
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "licence": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The username to autenticate in API",
                        "example": "YOURLICENCE"
                    },
                    "username": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The username to autenticate in API",
                        "example": "YOURUSERNAME"
                    },
                    "password": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The password to autenticate in API",
                        "example": "YOURPASSWORD"
                    }
                },
                "additionalProperties": false
            },
            "OUT_DOCUMENTS": {
                "type": "object",
                "properties": {
                    "documentId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date of the document.",
                        "format": "date-time",
                        "example": "2023-07-01"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the document.",
                        "nullable": true,
                        "example": "Order"
                    },
                    "series": {
                        "type": "string",
                        "description": "The series of the document.",
                        "nullable": true,
                        "example": "A"
                    },
                    "number": {
                        "type": "string",
                        "description": "The number of the document.",
                        "nullable": true,
                        "example": "12345"
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency of the document.",
                        "nullable": true,
                        "example": "EUR"
                    },
                    "vatNumber": {
                        "type": "string",
                        "description": "The VAT number of the customer.",
                        "nullable": true,
                        "example": "123456789"
                    },
                    "customerCode": {
                        "type": "string",
                        "description": "The code of the customer.",
                        "nullable": true,
                        "example": "C0001"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "The name of the customer.",
                        "nullable": true,
                        "example": "John Doe"
                    },
                    "customerAddress": {
                        "type": "string",
                        "description": "The address of the customer.",
                        "nullable": true,
                        "example": "Edifício Bettertech"
                    },
                    "customerAddress2": {
                        "type": "string",
                        "description": "The second line of the customer's address.",
                        "nullable": true,
                        "example": "Praça do Comércio 14"
                    },
                    "customerZipCode": {
                        "type": "string",
                        "description": "The ZIP code of the customer's address.",
                        "nullable": true,
                        "example": "3000-116"
                    },
                    "customerCity": {
                        "type": "string",
                        "description": "The city of the customer's address.",
                        "nullable": true,
                        "example": "Coimbra"
                    },
                    "customerCountry": {
                        "type": "string",
                        "description": "The country of the customer's address.",
                        "nullable": true,
                        "example": "Portugal"
                    },
                    "sellerCode": {
                        "type": "string",
                        "description": "The code of the seller.",
                        "nullable": true,
                        "example": "S001"
                    },
                    "sellerName": {
                        "type": "string",
                        "description": "The name of the seller.",
                        "nullable": true,
                        "example": "Jane Smith"
                    },
                    "sellerSerial": {
                        "type": "string",
                        "description": "The serial of the seller.",
                        "nullable": true,
                        "example": "V1"
                    },
                    "paymentcondition": {
                        "type": "string",
                        "description": "Payment Condition Code.",
                        "nullable": true,
                        "example": "PP"
                    },
                    "subtotal": {
                        "type": "number",
                        "description": "The subtotal of the document.",
                        "format": "double",
                        "example": 100.5
                    },
                    "totalDiscounts": {
                        "type": "number",
                        "description": "The total discounts applied to the document.",
                        "format": "double",
                        "example": 10
                    },
                    "vatTotal": {
                        "type": "number",
                        "description": "The total VAT amount of the document.",
                        "format": "double",
                        "example": 20.1
                    },
                    "total": {
                        "type": "number",
                        "description": "The total amount of the document.",
                        "format": "double",
                        "example": 110.6
                    },
                    "deliveryDate": {
                        "type": "string",
                        "description": "The delivery date of the document.",
                        "format": "date-time",
                        "example": "2023-07-05"
                    },
                    "loadingLocation": {
                        "type": "string",
                        "description": "The location for loading.",
                        "nullable": true,
                        "example": "Warehouse A"
                    },
                    "loadingTime": {
                        "type": "string",
                        "description": "The time for loading.",
                        "nullable": true,
                        "example": "10:00 AM"
                    },
                    "unloadingLocation": {
                        "type": "string",
                        "description": "The location for unloading.",
                        "nullable": true,
                        "example": "Customer's address"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Additional notes for the document.",
                        "nullable": true,
                        "example": "Please handle with care."
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "The ID of the customer associated with the document.",
                        "format": "int32",
                        "example": 1
                    },
                    "sellerId": {
                        "type": "integer",
                        "description": "The ID of the seller associated with the document.",
                        "format": "int32",
                        "example": 2
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OUT_DOCUMENTSLN"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OUT_DOCUMENTSLN": {
                "type": "object",
                "properties": {
                    "lineId": {
                        "type": "integer",
                        "description": "The unique identifier of the line item.",
                        "format": "int32",
                        "example": 1
                    },
                    "productCode": {
                        "type": "string",
                        "description": "The code of the product.",
                        "nullable": true,
                        "example": "P001"
                    },
                    "productDescription": {
                        "type": "string",
                        "description": "The description of the product.",
                        "nullable": true,
                        "example": "Product A"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "The quantity of the product.",
                        "format": "double",
                        "example": 10
                    },
                    "price": {
                        "type": "number",
                        "description": "The price of the product.",
                        "format": "double",
                        "example": 20.5
                    },
                    "subtotal": {
                        "type": "number",
                        "description": "The subtotal for the line item.",
                        "format": "double",
                        "example": 205
                    },
                    "discount": {
                        "type": "number",
                        "description": "The discount applied to the line item.",
                        "format": "double",
                        "example": 10
                    },
                    "vat": {
                        "type": "number",
                        "description": "The VAT amount for the line item.",
                        "format": "double",
                        "example": 41
                    },
                    "total": {
                        "type": "number",
                        "description": "The total amount for the line item.",
                        "format": "double",
                        "example": 236
                    }
                },
                "additionalProperties": false
            },
            "OUT_RECEIPTS": {
                "type": "object",
                "properties": {
                    "receiptid": {
                        "type": "integer",
                        "description": "The ID of the receipt.",
                        "format": "int32",
                        "example": 1234
                    },
                    "date": {
                        "type": "string",
                        "description": "The date of the receipt.",
                        "format": "date-time",
                        "example": "2023-07-01"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the receipt.",
                        "nullable": true,
                        "example": "Invoice"
                    },
                    "series": {
                        "type": "string",
                        "description": "The series of the receipt.",
                        "nullable": true,
                        "example": "A"
                    },
                    "number": {
                        "type": "string",
                        "description": "The number of the receipt.",
                        "nullable": true,
                        "example": "001"
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency of the receipt.",
                        "nullable": true,
                        "example": "USD"
                    },
                    "vatnumber": {
                        "type": "string",
                        "description": "The VAT number of the customer.",
                        "nullable": true,
                        "example": "123456789"
                    },
                    "customerCode": {
                        "type": "string",
                        "description": "The customer's internal code.",
                        "nullable": true,
                        "example": "CUST001"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "The name of the customer.",
                        "nullable": true,
                        "example": "John Doe"
                    },
                    "customerAddress": {
                        "type": "string",
                        "description": "The address of the customer.",
                        "nullable": true,
                        "example": "Edificio Bettertech"
                    },
                    "customerAddress2": {
                        "type": "string",
                        "description": "The secondary address of the customer.",
                        "nullable": true,
                        "example": "Praça do Comércio 14"
                    },
                    "customerZipcode": {
                        "type": "string",
                        "description": "The ZIP code of the customer's address.",
                        "nullable": true,
                        "example": "3000-116"
                    },
                    "customerCity": {
                        "type": "string",
                        "description": "The city of the customer's address.",
                        "nullable": true,
                        "example": "Coimbra"
                    },
                    "customerCountry": {
                        "type": "string",
                        "description": "The country of the customer's address.",
                        "nullable": true,
                        "example": "Portugal"
                    },
                    "collectorCode": {
                        "type": "string",
                        "description": "The code of the collector.",
                        "nullable": true,
                        "example": "COL001"
                    },
                    "collectorName": {
                        "type": "string",
                        "description": "The name of the collector.",
                        "nullable": true,
                        "example": "Jane Smith"
                    },
                    "total": {
                        "type": "number",
                        "description": "The total amount of the receipt.",
                        "format": "double",
                        "example": 100.5
                    },
                    "notes": {
                        "type": "string",
                        "description": "Additional notes or comments about the receipt.",
                        "nullable": true,
                        "example": "This receipt is for the purchase of goods."
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OUT_RECEIPTSLN"
                        },
                        "nullable": true
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OUT_RECEIPTSPAYMENT"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OUT_RECEIPTSLN": {
                "type": "object",
                "properties": {
                    "lineid": {
                        "type": "integer",
                        "description": "The ID of the line item.",
                        "format": "int32",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "description": "The document type associated with the line item.",
                        "nullable": true,
                        "example": "FT"
                    },
                    "serial": {
                        "type": "string",
                        "description": "The document serial",
                        "nullable": true,
                        "example": "V1"
                    },
                    "number": {
                        "type": "string",
                        "description": "The document number",
                        "nullable": true,
                        "example": "00001"
                    },
                    "documentdate": {
                        "type": "string",
                        "description": "The date of the document.",
                        "format": "date-time",
                        "example": "2023-07-15"
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency of the amount.",
                        "nullable": true,
                        "example": "USD"
                    },
                    "unpaidAmount": {
                        "type": "number",
                        "description": "The unpaid amount.",
                        "format": "double",
                        "example": 50
                    },
                    "paidAmount": {
                        "type": "number",
                        "description": "The paid amount.",
                        "format": "double",
                        "example": 50
                    }
                },
                "additionalProperties": false
            },
            "OUT_RECEIPTSPAYMENT": {
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "integer",
                        "description": "The ID of the payment.",
                        "format": "int32",
                        "example": 1
                    },
                    "dateIn": {
                        "type": "string",
                        "description": "The date of the payment received.",
                        "format": "date-time",
                        "example": "2023-07-15"
                    },
                    "paymentTypeCode": {
                        "type": "string",
                        "description": "Code of type of payment.",
                        "nullable": true,
                        "example": "2"
                    },
                    "paymentType": {
                        "type": "string",
                        "description": "The type of payment.",
                        "nullable": true,
                        "example": "Credit Card"
                    },
                    "ammount": {
                        "type": "number",
                        "description": "The amount of the payment.",
                        "format": "double",
                        "example": 100
                    },
                    "bankCheck": {
                        "type": "string",
                        "description": "The check number of the payment if applicable.",
                        "nullable": true,
                        "example": "12345"
                    },
                    "bankCheckLocation": {
                        "type": "string",
                        "description": "The location of the bank check if applicable.",
                        "nullable": true,
                        "example": "Branch A"
                    },
                    "bankName": {
                        "type": "string",
                        "description": "The name of the bank.",
                        "nullable": true,
                        "example": "ABC Bank"
                    }
                },
                "additionalProperties": false
            }
        }
    }
}